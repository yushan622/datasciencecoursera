install.packages("ggplot2")
setwd("C:/workspace/r/IntroToDataScience")
train <- read.csv("train.csv", header = TRUE)
test <- read.csv("test.csv", header = TRUE)
View(test)
View(train)
View(train)
View(test)
View(test)
test.survived <- data.frame(survived = rep("None", nrow(test)), test[,])
View(test.survived)
data.combined <- rbind(train, test.survived)
str(data.combined)
data.combined$survived <- as.factor(data.combined$survived)
data.combined$pclass <- as.factor(data.combined$pclass)
str(data.combined)
table(data.combined$survived)
# Distribution across classes
table(data.combined$pclass)
# Load up ggplot2 package to use for visualizations
library(ggplot2)
# Hypothesis - Rich folks survived at a higer rate
train$pclass <- as.factor(train$pclass)
str(train)
ggplot(train, aes(x = pclass, fill = factor(survived))) +
geom_bar() +
xlab("Pclass") +
ylab("Total Count") +
labs(fill = "Survived")
# Examine the first few names in the training data set
head(as.character(train$name))
# How many unique names are there across both train & test?
length(unique(as.character(data.combined$name)))
# How many unique names are there across both train & test?
length(unique(as.character(data.combined$name)))
# Two duplicate names, take a closer look
# First, get the duplicate names and store them as a vector
dup.names <- as.character(data.combined[which(duplicated(as.character(data.combined$name))), "name"])
# Two duplicate names, take a closer look
# First, get the duplicate names and store them as a vector
dup.names <- as.character(data.combined[which(duplicated(as.character(data.combined$name))), "name"])
# Next, take a look at the records in the combined data set
data.combined[which(data.combined$name %in% dup.names),]
# Next, take a look at the records in the combined data set
data.combined[which(data.combined$name %in% dup.names),]
x <- 1:100
y <- x * x * x
plot (x, y)
y <- x* x*x*x
plot (x, y)
y <- sqrt(x)
plot (x, y)
y <- sqrt(sqrt(x))
plot (x, y)
help.start()
dummy <- (x=x, y=x*x)
dummy <- data.frame(x=x, y=x*x)
plot(dummy)
dummy <- data.frame(x=x, y=x*x, z=sqrt(x))
plot(dummy)
rnorm
help.rnorm
help rnorm
?rnorm
x <- 3
y <- 2
x ~ y
?lm
x <-1:20
fm <- lm(y~x, data = dummy)
summary(fm)
x <- 20
sd(x)
summary(x)
x <- 1:20
sd(x)
x <- 6,7,8
x <- 6 7 8 9
x <- {6, 7, 8, 9}
x <- [1, 2, 3]
?lrf
?lowess
?plot
package()
packages()
search()
search()
search('tool')
search("tool")
?search
searchpaths()
#Testing
echo Hello world!
#Testing
echo "Hello world!"
#Testing
print("Hello world!")
getwd()
dir()
read.csv("test.csv")
dir()
myfunction <- function() {}
myfunction <- function() {}
myfunction <- function() {
x <- rnorm(100)
mean(x)
}
library()
ls()
myfunction()
myfunction()
x
x <- rnorm(20)
x
add2 <- function(x, y) {
x + y
}
add2(2, 3)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
above <- function(x, n 10) {
use <- x > n
x[use]
}
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
dir()
install.packages("swirl")
library("swirl")
swirl()
swirl()
library("swirl")
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters((t2))
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() -t1
difftime(Sys.time(), t1, units = 'days')
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x) {x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("hello", "world")
submit()
mad_libs(place="office", adjective="hungry", noun="food")
submit()
'I' %p% 'love' %p% 'R!'
quit()
source("best.R")
getwd()
setwd("C:/workspace/r")
dir()
setwd("C:/workspace/r/assignment3")
dir()
source("best.R")
best("NY", "Heart attack")
best("NY", "heart attack")
best("NY", "heart failure")
best("MD", "heart failure")
source("rankhospital.R")
rankhospital("BB","heart attack")
rankhospital("NY","heart attack")
source("rankhospital.R")
df <- rankhospital("NY","heart attack")
df
source("rankhospital.R")
df <- rankhospital("NY","heart attack")
df
df <- rankhospital("NY","heart attack", "best")
df
df <- rankhospital("NY","heart attack", "worst")
df
df <- rankhospital("NY","heart attack", 151)
df
df <- rankhospital("NY","heart attack", 152)
df
df <- rankhospital("NY","heart attack", 150)
df
df <- rankhospital("NY","heart attack", 1)
df
source("rankhospital.R")
rankhospital("NY","heart failure", 4)
rankhospital("MD","heart attack", "worst")
rankhospital("MN","heart attack", 5000)
rankhospital("TX","heart failure", 4)
source("rankall.R")
df<-rankall("heart attack")
dim(df)
head(df)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
df <- rankall("heart attack", 20)
df
str(df)
dim(df)
df$names
df$name
colnames(df)
colnames(df)
class(df)
df
dimnames(df)
df[1]
df
adply(df, c(1))
adply(df)
df0 <- as.data.frame.table(df)
df0
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
df <- rankall("heart attack", 20)
source("rankall.R")
df <- rankall("heart attack", 20)
df
source("rankall.R")
df <- rankall("heart attack", 20)
df
source("rankall.R")
df <- rankall("heart attack", 20)
df
source("rankall.R")
df <- rankall("heart attack", 20)
df
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
source("rankall.R")
source("best.R")
source("rankhospital.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
